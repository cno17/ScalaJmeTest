package jme.util.camera

import com.jme3.input.KeyInput
import com.jme3.input.event.KeyInputEvent
import com.jme3.math.Quaternion
import com.jme3.math.Vector3f
import jme.util.MonkeyApp

// todo: vel, acc
// todo: use mouse

class PlanarCameraController(val app: MonkeyApp) extends CameraController:

  private val v1 = Vector3f()
  private val v2 = Vector3f()

  private val q1 = Quaternion()
  private val q2 = Quaternion()

  private val tra = 1.00f
  private val rot = 0.05f

  initialize()

  override def initialize() =
    app.keyListeners += onKeyEvent

  override def cleanup() =
    app.keyListeners -= onKeyEvent

  def onKeyEvent(e: KeyInputEvent) =
    if e.isPressed || e.isRepeating then
      if e.getKeyCode == KeyInput.KEY_LEFT then
        q1.set(cam.getRotation)
        q1.multLocal(q2.fromAngles(0, +rot, 0))
        cam.setRotation(q1)
      if e.getKeyCode == KeyInput.KEY_RIGHT then
        q1.set(cam.getRotation)
        q1.multLocal(q2.fromAngles(0, -rot, 0))
        cam.setRotation(q1)
      if e.getKeyCode == KeyInput.KEY_UP then
        v1.set(cam.getTranslation)
        v1.addLocal(cam.getDirection(v2), +tra)
        cam.setTranslation(v1)
      if e.getKeyCode == KeyInput.KEY_DOWN then
        v1.set(cam.getTranslation)
        v1.addLocal(cam.getDirection(v2), -tra)
        cam.setTranslation(v1)
