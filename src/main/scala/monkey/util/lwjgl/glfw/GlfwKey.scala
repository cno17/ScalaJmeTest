package monkey.util.lwjgl.glfw

import org.lwjgl.glfw.GLFW.*

//object Key:
//  def apply(i: Int) = Key.values.find(_.id == i).get

enum GlfwKey(val id: Int):

  case K_0 extends GlfwKey(GLFW_KEY_0)
  case K_1 extends GlfwKey(GLFW_KEY_1)
  case K_2 extends GlfwKey(GLFW_KEY_2)
  case K_3 extends GlfwKey(GLFW_KEY_3)
  case K_4 extends GlfwKey(GLFW_KEY_4)
  case K_5 extends GlfwKey(GLFW_KEY_5)
  case K_6 extends GlfwKey(GLFW_KEY_6)
  case K_7 extends GlfwKey(GLFW_KEY_7)
  case K_8 extends GlfwKey(GLFW_KEY_8)
  case K_9 extends GlfwKey(GLFW_KEY_9)
  case F1 extends GlfwKey(GLFW_KEY_F1)
  case F2 extends GlfwKey(GLFW_KEY_F2)
  case F3 extends GlfwKey(GLFW_KEY_F3)
  case F4 extends GlfwKey(GLFW_KEY_F4)
  case F5 extends GlfwKey(GLFW_KEY_F5)
  case F6 extends GlfwKey(GLFW_KEY_F6)
  case F7 extends GlfwKey(GLFW_KEY_F7)
  case F8 extends GlfwKey(GLFW_KEY_F8)
  case F9 extends GlfwKey(GLFW_KEY_F9)
  case F10 extends GlfwKey(GLFW_KEY_F10)
  case F11 extends GlfwKey(GLFW_KEY_F11)
  case F12 extends GlfwKey(GLFW_KEY_F12)
  case A extends GlfwKey(GLFW_KEY_A)
  case B extends GlfwKey(GLFW_KEY_B)
  case C extends GlfwKey(GLFW_KEY_C)
  case Comma extends GlfwKey(GLFW_KEY_COMMA)
  case D extends GlfwKey(GLFW_KEY_D)
  case Delete extends GlfwKey(GLFW_KEY_DELETE)
  case Down extends GlfwKey(GLFW_KEY_DOWN)
  case E extends GlfwKey(GLFW_KEY_E)
  case End extends GlfwKey(GLFW_KEY_END)
  case Enter extends GlfwKey(GLFW_KEY_ENTER)
  case Equal extends GlfwKey(GLFW_KEY_EQUAL)
  case Escape extends GlfwKey(GLFW_KEY_ESCAPE)
  case F extends GlfwKey(GLFW_KEY_F)
  case G extends GlfwKey(GLFW_KEY_G)
  case H extends GlfwKey(GLFW_KEY_H)
  case Home extends GlfwKey(GLFW_KEY_HOME)
  case I extends GlfwKey(GLFW_KEY_I)
  case Insert extends GlfwKey(GLFW_KEY_INSERT)
  case J extends GlfwKey(GLFW_KEY_J)
  case K extends GlfwKey(GLFW_KEY_K)
  case L extends GlfwKey(GLFW_KEY_L)
  case Last extends GlfwKey(GLFW_KEY_LAST)
  case Left extends GlfwKey(GLFW_KEY_LEFT)
  case LeftAlt extends GlfwKey(GLFW_KEY_LEFT_ALT)
  case LeftBracket extends GlfwKey(GLFW_KEY_LEFT_BRACKET)
  case LeftControl extends GlfwKey(GLFW_KEY_LEFT_CONTROL)
  case LeftShift extends GlfwKey(GLFW_KEY_LEFT_SHIFT)
  case LeftSuper extends GlfwKey(GLFW_KEY_LEFT_SUPER)
  case M extends GlfwKey(GLFW_KEY_M)
  case Menu extends GlfwKey(GLFW_KEY_MENU)
  case Minus extends GlfwKey(GLFW_KEY_MINUS)
  case N extends GlfwKey(GLFW_KEY_N)
  case NumLock extends GlfwKey(GLFW_KEY_NUM_LOCK)
  case O extends GlfwKey(GLFW_KEY_O)
  case P extends GlfwKey(GLFW_KEY_P)
  case PageDown extends GlfwKey(GLFW_KEY_PAGE_DOWN)
  case PageUp extends GlfwKey(GLFW_KEY_PAGE_UP)
  case Pause extends GlfwKey(GLFW_KEY_PAUSE)
  case Period extends GlfwKey(GLFW_KEY_PERIOD)
  case PrintScreen extends GlfwKey(GLFW_KEY_PRINT_SCREEN)
  case Q extends GlfwKey(GLFW_KEY_Q)
  case R extends GlfwKey(GLFW_KEY_R)
  case Right extends GlfwKey(GLFW_KEY_RIGHT)
  case RightAlt extends GlfwKey(GLFW_KEY_RIGHT_ALT)
  case RightBracker extends GlfwKey(GLFW_KEY_RIGHT_BRACKET)
  case RightControl extends GlfwKey(GLFW_KEY_RIGHT_CONTROL)
  case RightShift extends GlfwKey(GLFW_KEY_RIGHT_SHIFT)
  case RightSuper extends GlfwKey(GLFW_KEY_RIGHT_SUPER)
  case S extends GlfwKey(GLFW_KEY_S)
  case ScrollLock extends GlfwKey(GLFW_KEY_SCROLL_LOCK)
  case Semicolon extends GlfwKey(GLFW_KEY_SEMICOLON)
  case Slash extends GlfwKey(GLFW_KEY_SLASH)
  case Space extends GlfwKey(GLFW_KEY_SPACE)
  case T extends GlfwKey(GLFW_KEY_T)
  case Tab extends GlfwKey(GLFW_KEY_TAB)
  case U extends GlfwKey(GLFW_KEY_U)
  case Unknown extends GlfwKey(GLFW_KEY_UNKNOWN)
  case Up extends GlfwKey(GLFW_KEY_UP)
  case V extends GlfwKey(GLFW_KEY_V)
  case W extends GlfwKey(GLFW_KEY_W)
  case World1 extends GlfwKey(GLFW_KEY_WORLD_1)
  case World2 extends GlfwKey(GLFW_KEY_WORLD_2)
  case X extends GlfwKey(GLFW_KEY_X)
  case Y extends GlfwKey(GLFW_KEY_Z) // !!!
  case Z extends GlfwKey(GLFW_KEY_Y) // !!!
